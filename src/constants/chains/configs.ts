// This file is auto-generated by scripts/generate-ui-assets.ts
import { defineChain } from "viem";

import alephZeroLogo from "assets/chain-logos/aleph-zero.svg";
import alephZeroGrayscaleLogo from "assets/chain-logos/aleph-zero-grayscale.svg";
import { ReactComponent as alephZeroLogoSvg } from "assets/chain-logos/aleph-zero.svg";
import { ReactComponent as alephZeroGrayscaleLogoSvg } from "assets/chain-logos/aleph-zero-grayscale.svg";

import arbitrumLogo from "assets/chain-logos/arbitrum.svg";
import arbitrumGrayscaleLogo from "assets/chain-logos/arbitrum-grayscale.svg";
import { ReactComponent as arbitrumLogoSvg } from "assets/chain-logos/arbitrum.svg";
import { ReactComponent as arbitrumGrayscaleLogoSvg } from "assets/chain-logos/arbitrum-grayscale.svg";

import arbitrumSepoliaLogo from "assets/chain-logos/arbitrum-sepolia.svg";
import arbitrumSepoliaGrayscaleLogo from "assets/chain-logos/arbitrum-sepolia-grayscale.svg";
import { ReactComponent as arbitrumSepoliaLogoSvg } from "assets/chain-logos/arbitrum-sepolia.svg";
import { ReactComponent as arbitrumSepoliaGrayscaleLogoSvg } from "assets/chain-logos/arbitrum-sepolia-grayscale.svg";

import baseLogo from "assets/chain-logos/base.svg";
import baseGrayscaleLogo from "assets/chain-logos/base-grayscale.svg";
import { ReactComponent as baseLogoSvg } from "assets/chain-logos/base.svg";
import { ReactComponent as baseGrayscaleLogoSvg } from "assets/chain-logos/base-grayscale.svg";

import baseSepoliaLogo from "assets/chain-logos/base-sepolia.svg";
import baseSepoliaGrayscaleLogo from "assets/chain-logos/base-sepolia-grayscale.svg";
import { ReactComponent as baseSepoliaLogoSvg } from "assets/chain-logos/base-sepolia.svg";
import { ReactComponent as baseSepoliaGrayscaleLogoSvg } from "assets/chain-logos/base-sepolia-grayscale.svg";

import blastLogo from "assets/chain-logos/blast.svg";
import blastGrayscaleLogo from "assets/chain-logos/blast-grayscale.svg";
import { ReactComponent as blastLogoSvg } from "assets/chain-logos/blast.svg";
import { ReactComponent as blastGrayscaleLogoSvg } from "assets/chain-logos/blast-grayscale.svg";

import blastSepoliaLogo from "assets/chain-logos/blast-sepolia.svg";
import blastSepoliaGrayscaleLogo from "assets/chain-logos/blast-sepolia-grayscale.svg";
import { ReactComponent as blastSepoliaLogoSvg } from "assets/chain-logos/blast-sepolia.svg";
import { ReactComponent as blastSepoliaGrayscaleLogoSvg } from "assets/chain-logos/blast-sepolia-grayscale.svg";

import inkLogo from "assets/chain-logos/ink.svg";
import inkGrayscaleLogo from "assets/chain-logos/ink-grayscale.svg";
import { ReactComponent as inkLogoSvg } from "assets/chain-logos/ink.svg";
import { ReactComponent as inkGrayscaleLogoSvg } from "assets/chain-logos/ink-grayscale.svg";

import lensSepoliaLogo from "assets/chain-logos/lens-sepolia.svg";
import lensSepoliaGrayscaleLogo from "assets/chain-logos/lens-sepolia-grayscale.svg";
import { ReactComponent as lensSepoliaLogoSvg } from "assets/chain-logos/lens-sepolia.svg";
import { ReactComponent as lensSepoliaGrayscaleLogoSvg } from "assets/chain-logos/lens-sepolia-grayscale.svg";

import lineaLogo from "assets/chain-logos/linea.svg";
import lineaGrayscaleLogo from "assets/chain-logos/linea-grayscale.svg";
import { ReactComponent as lineaLogoSvg } from "assets/chain-logos/linea.svg";
import { ReactComponent as lineaGrayscaleLogoSvg } from "assets/chain-logos/linea-grayscale.svg";

import liskLogo from "assets/chain-logos/lisk.svg";
import liskGrayscaleLogo from "assets/chain-logos/lisk-grayscale.svg";
import { ReactComponent as liskLogoSvg } from "assets/chain-logos/lisk.svg";
import { ReactComponent as liskGrayscaleLogoSvg } from "assets/chain-logos/lisk-grayscale.svg";

import liskSepoliaLogo from "assets/chain-logos/lisk-sepolia.svg";
import liskSepoliaGrayscaleLogo from "assets/chain-logos/lisk-sepolia-grayscale.svg";
import { ReactComponent as liskSepoliaLogoSvg } from "assets/chain-logos/lisk-sepolia.svg";
import { ReactComponent as liskSepoliaGrayscaleLogoSvg } from "assets/chain-logos/lisk-sepolia-grayscale.svg";

import ethereumLogo from "assets/chain-logos/mainnet.svg";
import ethereumGrayscaleLogo from "assets/chain-logos/mainnet-grayscale.svg";
import { ReactComponent as ethereumLogoSvg } from "assets/chain-logos/mainnet.svg";
import { ReactComponent as ethereumGrayscaleLogoSvg } from "assets/chain-logos/mainnet-grayscale.svg";

import modeLogo from "assets/chain-logos/mode.svg";
import modeGrayscaleLogo from "assets/chain-logos/mode-grayscale.svg";
import { ReactComponent as modeLogoSvg } from "assets/chain-logos/mode.svg";
import { ReactComponent as modeGrayscaleLogoSvg } from "assets/chain-logos/mode-grayscale.svg";

import modeSepoliaLogo from "assets/chain-logos/mode-sepolia.svg";
import modeSepoliaGrayscaleLogo from "assets/chain-logos/mode-sepolia-grayscale.svg";
import { ReactComponent as modeSepoliaLogoSvg } from "assets/chain-logos/mode-sepolia.svg";
import { ReactComponent as modeSepoliaGrayscaleLogoSvg } from "assets/chain-logos/mode-sepolia-grayscale.svg";

import optimismLogo from "assets/chain-logos/optimism.svg";
import optimismGrayscaleLogo from "assets/chain-logos/optimism-grayscale.svg";
import { ReactComponent as optimismLogoSvg } from "assets/chain-logos/optimism.svg";
import { ReactComponent as optimismGrayscaleLogoSvg } from "assets/chain-logos/optimism-grayscale.svg";

import optimismSepoliaLogo from "assets/chain-logos/optimism-sepolia.svg";
import optimismSepoliaGrayscaleLogo from "assets/chain-logos/optimism-sepolia-grayscale.svg";
import { ReactComponent as optimismSepoliaLogoSvg } from "assets/chain-logos/optimism-sepolia.svg";
import { ReactComponent as optimismSepoliaGrayscaleLogoSvg } from "assets/chain-logos/optimism-sepolia-grayscale.svg";

import polygonLogo from "assets/chain-logos/polygon.svg";
import polygonGrayscaleLogo from "assets/chain-logos/polygon-grayscale.svg";
import { ReactComponent as polygonLogoSvg } from "assets/chain-logos/polygon.svg";
import { ReactComponent as polygonGrayscaleLogoSvg } from "assets/chain-logos/polygon-grayscale.svg";

import polygonAmoyLogo from "assets/chain-logos/polygon-amoy.svg";
import polygonAmoyGrayscaleLogo from "assets/chain-logos/polygon-amoy-grayscale.svg";
import { ReactComponent as polygonAmoyLogoSvg } from "assets/chain-logos/polygon-amoy.svg";
import { ReactComponent as polygonAmoyGrayscaleLogoSvg } from "assets/chain-logos/polygon-amoy-grayscale.svg";

import redstoneLogo from "assets/chain-logos/redstone.svg";
import redstoneGrayscaleLogo from "assets/chain-logos/redstone-grayscale.svg";
import { ReactComponent as redstoneLogoSvg } from "assets/chain-logos/redstone.svg";
import { ReactComponent as redstoneGrayscaleLogoSvg } from "assets/chain-logos/redstone-grayscale.svg";

import scrollLogo from "assets/chain-logos/scroll.svg";
import scrollGrayscaleLogo from "assets/chain-logos/scroll-grayscale.svg";
import { ReactComponent as scrollLogoSvg } from "assets/chain-logos/scroll.svg";
import { ReactComponent as scrollGrayscaleLogoSvg } from "assets/chain-logos/scroll-grayscale.svg";

import sepoliaLogo from "assets/chain-logos/sepolia.svg";
import sepoliaGrayscaleLogo from "assets/chain-logos/sepolia-grayscale.svg";
import { ReactComponent as sepoliaLogoSvg } from "assets/chain-logos/sepolia.svg";
import { ReactComponent as sepoliaGrayscaleLogoSvg } from "assets/chain-logos/sepolia-grayscale.svg";

import soneiumLogo from "assets/chain-logos/soneium.svg";
import soneiumGrayscaleLogo from "assets/chain-logos/soneium-grayscale.svg";
import { ReactComponent as soneiumLogoSvg } from "assets/chain-logos/soneium.svg";
import { ReactComponent as soneiumGrayscaleLogoSvg } from "assets/chain-logos/soneium-grayscale.svg";

import worldChainLogo from "assets/chain-logos/world-chain.svg";
import worldChainGrayscaleLogo from "assets/chain-logos/world-chain-grayscale.svg";
import { ReactComponent as worldChainLogoSvg } from "assets/chain-logos/world-chain.svg";
import { ReactComponent as worldChainGrayscaleLogoSvg } from "assets/chain-logos/world-chain-grayscale.svg";

import zkSyncLogo from "assets/chain-logos/zk-sync.svg";
import zkSyncGrayscaleLogo from "assets/chain-logos/zk-sync-grayscale.svg";
import { ReactComponent as zkSyncLogoSvg } from "assets/chain-logos/zk-sync.svg";
import { ReactComponent as zkSyncGrayscaleLogoSvg } from "assets/chain-logos/zk-sync-grayscale.svg";

import zoraLogo from "assets/chain-logos/zora.svg";
import zoraGrayscaleLogo from "assets/chain-logos/zora-grayscale.svg";
import { ReactComponent as zoraLogoSvg } from "assets/chain-logos/zora.svg";
import { ReactComponent as zoraGrayscaleLogoSvg } from "assets/chain-logos/zora-grayscale.svg";

import hyperliquidLogo from "assets/extern-logos/hyperliquid.svg";
import hyperliquidGrayscaleLogo from "assets/extern-logos/hyperliquid-grayscale.svg";
import { ReactComponent as hyperliquidLogoSvg } from "assets/extern-logos/hyperliquid.svg";
import { ReactComponent as hyperliquidGrayscaleLogoSvg } from "assets/extern-logos/hyperliquid-grayscale.svg";

export const alephZero = {
  name: "Aleph Zero",
  fullName: "Aleph Zero",
  chainId: 41455,
  logoURI: alephZeroLogo,
  grayscaleLogoURI: alephZeroGrayscaleLogo,
  logoSvg: alephZeroLogoSvg,
  grayscaleLogoSvg: alephZeroGrayscaleLogoSvg,
  rpcUrl: "https://rpc.alephzero.raas.gelato.cloud",
  explorerUrl: "https://evm-explorer.alephzero.org",
  constructExplorerLink: (txHash: string) =>
    `${alephZero.explorerUrl}/tx/${txHash}`,
  nativeCurrencySymbol: "AZERO",
  customRpcUrl: process.env.REACT_APP_CHAIN_41455_PROVIDER_URL,
  pollingInterval: 6000,
};

export const alephZero_viem = defineChain({
  id: alephZero.chainId,
  name: alephZero.name,
  nativeCurrency: {
    name: alephZero.nativeCurrencySymbol,
    symbol: alephZero.nativeCurrencySymbol,
    decimals: 18,
  },
  rpcUrls: {
    default: {
      http: [
        alephZero.rpcUrl,
        alephZero.customRpcUrl ? alephZero.customRpcUrl : [],
      ].flat(),
    },
  },
  blockExplorers: {
    default: {
      name: alephZero.name + " Explorer",
      url: alephZero.explorerUrl,
    },
  },
});

export const arbitrum = {
  name: "Arbitrum",
  fullName: "Arbitrum One",
  chainId: 42161,
  logoURI: arbitrumLogo,
  grayscaleLogoURI: arbitrumGrayscaleLogo,
  logoSvg: arbitrumLogoSvg,
  grayscaleLogoSvg: arbitrumGrayscaleLogoSvg,
  rpcUrl: "https://arb1.arbitrum.io/rpc",
  explorerUrl: "https://arbiscan.io",
  constructExplorerLink: (txHash: string) =>
    `${arbitrum.explorerUrl}/tx/${txHash}`,
  nativeCurrencySymbol: "ETH",
  customRpcUrl: process.env.REACT_APP_CHAIN_42161_PROVIDER_URL,
  pollingInterval: 1000,
};

export const arbitrum_viem = defineChain({
  id: arbitrum.chainId,
  name: arbitrum.name,
  nativeCurrency: {
    name: arbitrum.nativeCurrencySymbol,
    symbol: arbitrum.nativeCurrencySymbol,
    decimals: 18,
  },
  rpcUrls: {
    default: {
      http: [
        arbitrum.rpcUrl,
        arbitrum.customRpcUrl ? arbitrum.customRpcUrl : [],
      ].flat(),
    },
  },
  blockExplorers: {
    default: {
      name: arbitrum.name + " Explorer",
      url: arbitrum.explorerUrl,
    },
  },
});

export const arbitrumSepolia = {
  name: "Arbitrum Sepolia",
  fullName: "Arbitrum sepolia",
  chainId: 421614,
  logoURI: arbitrumSepoliaLogo,
  grayscaleLogoURI: arbitrumSepoliaGrayscaleLogo,
  logoSvg: arbitrumSepoliaLogoSvg,
  grayscaleLogoSvg: arbitrumSepoliaGrayscaleLogoSvg,
  rpcUrl: "https://sepolia-rollup.arbitrum.io/rpc",
  explorerUrl: "https://sepolia.arbiscan.io",
  constructExplorerLink: (txHash: string) =>
    `${arbitrumSepolia.explorerUrl}/tx/${txHash}`,
  nativeCurrencySymbol: "ETH",
  customRpcUrl: process.env.REACT_APP_CHAIN_421614_PROVIDER_URL,
  pollingInterval: 15000,
};

export const arbitrumSepolia_viem = defineChain({
  id: arbitrumSepolia.chainId,
  name: arbitrumSepolia.name,
  nativeCurrency: {
    name: arbitrumSepolia.nativeCurrencySymbol,
    symbol: arbitrumSepolia.nativeCurrencySymbol,
    decimals: 18,
  },
  rpcUrls: {
    default: {
      http: [
        arbitrumSepolia.rpcUrl,
        arbitrumSepolia.customRpcUrl ? arbitrumSepolia.customRpcUrl : [],
      ].flat(),
    },
  },
  blockExplorers: {
    default: {
      name: arbitrumSepolia.name + " Explorer",
      url: arbitrumSepolia.explorerUrl,
    },
  },
});

export const base = {
  name: "Base",
  fullName: "Base",
  chainId: 8453,
  logoURI: baseLogo,
  grayscaleLogoURI: baseGrayscaleLogo,
  logoSvg: baseLogoSvg,
  grayscaleLogoSvg: baseGrayscaleLogoSvg,
  rpcUrl: "https://mainnet.base.org",
  explorerUrl: "https://basescan.org",
  constructExplorerLink: (txHash: string) => `${base.explorerUrl}/tx/${txHash}`,
  nativeCurrencySymbol: "ETH",
  customRpcUrl: process.env.REACT_APP_CHAIN_8453_PROVIDER_URL,
  pollingInterval: 2000,
};

export const base_viem = defineChain({
  id: base.chainId,
  name: base.name,
  nativeCurrency: {
    name: base.nativeCurrencySymbol,
    symbol: base.nativeCurrencySymbol,
    decimals: 18,
  },
  rpcUrls: {
    default: {
      http: [base.rpcUrl, base.customRpcUrl ? base.customRpcUrl : []].flat(),
    },
  },
  blockExplorers: {
    default: {
      name: base.name + " Explorer",
      url: base.explorerUrl,
    },
  },
});

export const baseSepolia = {
  name: "Base Sepolia",
  fullName: "Base sepolia",
  chainId: 84532,
  logoURI: baseSepoliaLogo,
  grayscaleLogoURI: baseSepoliaGrayscaleLogo,
  logoSvg: baseSepoliaLogoSvg,
  grayscaleLogoSvg: baseSepoliaGrayscaleLogoSvg,
  rpcUrl: "https://sepolia.base.org",
  explorerUrl: "https://sepolia.basescan.org",
  constructExplorerLink: (txHash: string) =>
    `${baseSepolia.explorerUrl}/tx/${txHash}`,
  nativeCurrencySymbol: "ETH",
  customRpcUrl: process.env.REACT_APP_CHAIN_84532_PROVIDER_URL,
  pollingInterval: 15000,
};

export const baseSepolia_viem = defineChain({
  id: baseSepolia.chainId,
  name: baseSepolia.name,
  nativeCurrency: {
    name: baseSepolia.nativeCurrencySymbol,
    symbol: baseSepolia.nativeCurrencySymbol,
    decimals: 18,
  },
  rpcUrls: {
    default: {
      http: [
        baseSepolia.rpcUrl,
        baseSepolia.customRpcUrl ? baseSepolia.customRpcUrl : [],
      ].flat(),
    },
  },
  blockExplorers: {
    default: {
      name: baseSepolia.name + " Explorer",
      url: baseSepolia.explorerUrl,
    },
  },
});

export const blast = {
  name: "Blast",
  fullName: "Blast",
  chainId: 81457,
  logoURI: blastLogo,
  grayscaleLogoURI: blastGrayscaleLogo,
  logoSvg: blastLogoSvg,
  grayscaleLogoSvg: blastGrayscaleLogoSvg,
  rpcUrl: "https://rpc.blast.io",
  explorerUrl: "https://blastscan.io",
  constructExplorerLink: (txHash: string) =>
    `${blast.explorerUrl}/tx/${txHash}`,
  nativeCurrencySymbol: "ETH",
  customRpcUrl: process.env.REACT_APP_CHAIN_81457_PROVIDER_URL,
  pollingInterval: 2000,
};

export const blast_viem = defineChain({
  id: blast.chainId,
  name: blast.name,
  nativeCurrency: {
    name: blast.nativeCurrencySymbol,
    symbol: blast.nativeCurrencySymbol,
    decimals: 18,
  },
  rpcUrls: {
    default: {
      http: [blast.rpcUrl, blast.customRpcUrl ? blast.customRpcUrl : []].flat(),
    },
  },
  blockExplorers: {
    default: {
      name: blast.name + " Explorer",
      url: blast.explorerUrl,
    },
  },
});

export const blastSepolia = {
  name: "Blast Sepolia",
  fullName: "Blast sepolia",
  chainId: 168587773,
  logoURI: blastSepoliaLogo,
  grayscaleLogoURI: blastSepoliaGrayscaleLogo,
  logoSvg: blastSepoliaLogoSvg,
  grayscaleLogoSvg: blastSepoliaGrayscaleLogoSvg,
  rpcUrl: "https://sepolia.blast.io",
  explorerUrl: "https://sepolia.blastscan.io",
  constructExplorerLink: (txHash: string) =>
    `${blastSepolia.explorerUrl}/tx/${txHash}`,
  nativeCurrencySymbol: "ETH",
  customRpcUrl: process.env.REACT_APP_CHAIN_168587773_PROVIDER_URL,
  pollingInterval: 2000,
};

export const blastSepolia_viem = defineChain({
  id: blastSepolia.chainId,
  name: blastSepolia.name,
  nativeCurrency: {
    name: blastSepolia.nativeCurrencySymbol,
    symbol: blastSepolia.nativeCurrencySymbol,
    decimals: 18,
  },
  rpcUrls: {
    default: {
      http: [
        blastSepolia.rpcUrl,
        blastSepolia.customRpcUrl ? blastSepolia.customRpcUrl : [],
      ].flat(),
    },
  },
  blockExplorers: {
    default: {
      name: blastSepolia.name + " Explorer",
      url: blastSepolia.explorerUrl,
    },
  },
});

export const ink = {
  name: "Ink",
  fullName: "Ink",
  chainId: 57073,
  logoURI: inkLogo,
  grayscaleLogoURI: inkGrayscaleLogo,
  logoSvg: inkLogoSvg,
  grayscaleLogoSvg: inkGrayscaleLogoSvg,
  rpcUrl: "https://rpc-gel.inkonchain.com",
  explorerUrl: "https://explorer.inkonchain.com",
  constructExplorerLink: (txHash: string) => `${ink.explorerUrl}/tx/${txHash}`,
  nativeCurrencySymbol: "ETH",
  customRpcUrl: process.env.REACT_APP_CHAIN_57073_PROVIDER_URL,
  pollingInterval: 1000,
};

export const ink_viem = defineChain({
  id: ink.chainId,
  name: ink.name,
  nativeCurrency: {
    name: ink.nativeCurrencySymbol,
    symbol: ink.nativeCurrencySymbol,
    decimals: 18,
  },
  rpcUrls: {
    default: {
      http: [ink.rpcUrl, ink.customRpcUrl ? ink.customRpcUrl : []].flat(),
    },
  },
  blockExplorers: {
    default: {
      name: ink.name + " Explorer",
      url: ink.explorerUrl,
    },
  },
});

export const lensSepolia = {
  name: "Lens Sepolia",
  fullName: "Lens sepolia",
  chainId: 37111,
  logoURI: lensSepoliaLogo,
  grayscaleLogoURI: lensSepoliaGrayscaleLogo,
  logoSvg: lensSepoliaLogoSvg,
  grayscaleLogoSvg: lensSepoliaGrayscaleLogoSvg,
  rpcUrl: "https://rpc.testnet.lens.dev",
  explorerUrl: "https://block-explorer.testnet.lens.dev",
  constructExplorerLink: (txHash: string) =>
    `${lensSepolia.explorerUrl}/tx/${txHash}`,
  nativeCurrencySymbol: "GRASS",
  customRpcUrl: process.env.REACT_APP_CHAIN_37111_PROVIDER_URL,
  pollingInterval: 1000,
};

export const lensSepolia_viem = defineChain({
  id: lensSepolia.chainId,
  name: lensSepolia.name,
  nativeCurrency: {
    name: lensSepolia.nativeCurrencySymbol,
    symbol: lensSepolia.nativeCurrencySymbol,
    decimals: 18,
  },
  rpcUrls: {
    default: {
      http: [
        lensSepolia.rpcUrl,
        lensSepolia.customRpcUrl ? lensSepolia.customRpcUrl : [],
      ].flat(),
    },
  },
  blockExplorers: {
    default: {
      name: lensSepolia.name + " Explorer",
      url: lensSepolia.explorerUrl,
    },
  },
});

export const linea = {
  name: "Linea",
  fullName: "Linea",
  chainId: 59144,
  logoURI: lineaLogo,
  grayscaleLogoURI: lineaGrayscaleLogo,
  logoSvg: lineaLogoSvg,
  grayscaleLogoSvg: lineaGrayscaleLogoSvg,
  rpcUrl: "https://rpc.linea.build",
  explorerUrl: "https://lineascan.build",
  constructExplorerLink: (txHash: string) =>
    `${linea.explorerUrl}/tx/${txHash}`,
  nativeCurrencySymbol: "ETH",
  customRpcUrl: process.env.REACT_APP_CHAIN_59144_PROVIDER_URL,
  pollingInterval: 2000,
};

export const linea_viem = defineChain({
  id: linea.chainId,
  name: linea.name,
  nativeCurrency: {
    name: linea.nativeCurrencySymbol,
    symbol: linea.nativeCurrencySymbol,
    decimals: 18,
  },
  rpcUrls: {
    default: {
      http: [linea.rpcUrl, linea.customRpcUrl ? linea.customRpcUrl : []].flat(),
    },
  },
  blockExplorers: {
    default: {
      name: linea.name + " Explorer",
      url: linea.explorerUrl,
    },
  },
});

export const lisk = {
  name: "Lisk",
  fullName: "Lisk",
  chainId: 1135,
  logoURI: liskLogo,
  grayscaleLogoURI: liskGrayscaleLogo,
  logoSvg: liskLogoSvg,
  grayscaleLogoSvg: liskGrayscaleLogoSvg,
  rpcUrl: "https://rpc.api.lisk.com",
  explorerUrl: "https://blockscout.lisk.com",
  constructExplorerLink: (txHash: string) => `${lisk.explorerUrl}/tx/${txHash}`,
  nativeCurrencySymbol: "ETH",
  customRpcUrl: process.env.REACT_APP_CHAIN_1135_PROVIDER_URL,
  pollingInterval: 2000,
};

export const lisk_viem = defineChain({
  id: lisk.chainId,
  name: lisk.name,
  nativeCurrency: {
    name: lisk.nativeCurrencySymbol,
    symbol: lisk.nativeCurrencySymbol,
    decimals: 18,
  },
  rpcUrls: {
    default: {
      http: [lisk.rpcUrl, lisk.customRpcUrl ? lisk.customRpcUrl : []].flat(),
    },
  },
  blockExplorers: {
    default: {
      name: lisk.name + " Explorer",
      url: lisk.explorerUrl,
    },
  },
});

export const liskSepolia = {
  name: "Lisk Sepolia",
  fullName: "Lisk sepolia",
  chainId: 4202,
  logoURI: liskSepoliaLogo,
  grayscaleLogoURI: liskSepoliaGrayscaleLogo,
  logoSvg: liskSepoliaLogoSvg,
  grayscaleLogoSvg: liskSepoliaGrayscaleLogoSvg,
  rpcUrl: "https://rpc.sepolia-api.lisk.com",
  explorerUrl: "https://sepolia-blockscout.lisk.com",
  constructExplorerLink: (txHash: string) =>
    `${liskSepolia.explorerUrl}/tx/${txHash}`,
  nativeCurrencySymbol: "ETH",
  customRpcUrl: process.env.REACT_APP_CHAIN_4202_PROVIDER_URL,
  pollingInterval: 15000,
};

export const liskSepolia_viem = defineChain({
  id: liskSepolia.chainId,
  name: liskSepolia.name,
  nativeCurrency: {
    name: liskSepolia.nativeCurrencySymbol,
    symbol: liskSepolia.nativeCurrencySymbol,
    decimals: 18,
  },
  rpcUrls: {
    default: {
      http: [
        liskSepolia.rpcUrl,
        liskSepolia.customRpcUrl ? liskSepolia.customRpcUrl : [],
      ].flat(),
    },
  },
  blockExplorers: {
    default: {
      name: liskSepolia.name + " Explorer",
      url: liskSepolia.explorerUrl,
    },
  },
});

export const ethereum = {
  name: "Ethereum",
  fullName: "Ethereum Mainnet",
  chainId: 1,
  logoURI: ethereumLogo,
  grayscaleLogoURI: ethereumGrayscaleLogo,
  logoSvg: ethereumLogoSvg,
  grayscaleLogoSvg: ethereumGrayscaleLogoSvg,
  rpcUrl: "https://mainnet.gateway.tenderly.co",
  explorerUrl: "https://etherscan.io",
  constructExplorerLink: (txHash: string) =>
    `${ethereum.explorerUrl}/tx/${txHash}`,
  nativeCurrencySymbol: "ETH",
  customRpcUrl: process.env.REACT_APP_CHAIN_1_PROVIDER_URL,
  pollingInterval: 12000,
};

export const ethereum_viem = defineChain({
  id: ethereum.chainId,
  name: ethereum.name,
  nativeCurrency: {
    name: ethereum.nativeCurrencySymbol,
    symbol: ethereum.nativeCurrencySymbol,
    decimals: 18,
  },
  rpcUrls: {
    default: {
      http: [
        ethereum.rpcUrl,
        ethereum.customRpcUrl ? ethereum.customRpcUrl : [],
      ].flat(),
    },
  },
  blockExplorers: {
    default: {
      name: ethereum.name + " Explorer",
      url: ethereum.explorerUrl,
    },
  },
});

export const mode = {
  name: "Mode",
  fullName: "Mode",
  chainId: 34443,
  logoURI: modeLogo,
  grayscaleLogoURI: modeGrayscaleLogo,
  logoSvg: modeLogoSvg,
  grayscaleLogoSvg: modeGrayscaleLogoSvg,
  rpcUrl: "https://mainnet.mode.network",
  explorerUrl: "https://explorer.mode.network",
  constructExplorerLink: (txHash: string) => `${mode.explorerUrl}/tx/${txHash}`,
  nativeCurrencySymbol: "ETH",
  customRpcUrl: process.env.REACT_APP_CHAIN_34443_PROVIDER_URL,
  pollingInterval: 2000,
};

export const mode_viem = defineChain({
  id: mode.chainId,
  name: mode.name,
  nativeCurrency: {
    name: mode.nativeCurrencySymbol,
    symbol: mode.nativeCurrencySymbol,
    decimals: 18,
  },
  rpcUrls: {
    default: {
      http: [mode.rpcUrl, mode.customRpcUrl ? mode.customRpcUrl : []].flat(),
    },
  },
  blockExplorers: {
    default: {
      name: mode.name + " Explorer",
      url: mode.explorerUrl,
    },
  },
});

export const modeSepolia = {
  name: "Mode Sepolia",
  fullName: "Mode sepolia",
  chainId: 919,
  logoURI: modeSepoliaLogo,
  grayscaleLogoURI: modeSepoliaGrayscaleLogo,
  logoSvg: modeSepoliaLogoSvg,
  grayscaleLogoSvg: modeSepoliaGrayscaleLogoSvg,
  rpcUrl: "https://sepolia.mode.network",
  explorerUrl: "https://sepolia.explorer.mode.network",
  constructExplorerLink: (txHash: string) =>
    `${modeSepolia.explorerUrl}/tx/${txHash}`,
  nativeCurrencySymbol: "ETH",
  customRpcUrl: process.env.REACT_APP_CHAIN_919_PROVIDER_URL,
  pollingInterval: 15000,
};

export const modeSepolia_viem = defineChain({
  id: modeSepolia.chainId,
  name: modeSepolia.name,
  nativeCurrency: {
    name: modeSepolia.nativeCurrencySymbol,
    symbol: modeSepolia.nativeCurrencySymbol,
    decimals: 18,
  },
  rpcUrls: {
    default: {
      http: [
        modeSepolia.rpcUrl,
        modeSepolia.customRpcUrl ? modeSepolia.customRpcUrl : [],
      ].flat(),
    },
  },
  blockExplorers: {
    default: {
      name: modeSepolia.name + " Explorer",
      url: modeSepolia.explorerUrl,
    },
  },
});

export const optimism = {
  name: "Optimism",
  fullName: "Optimism",
  chainId: 10,
  logoURI: optimismLogo,
  grayscaleLogoURI: optimismGrayscaleLogo,
  logoSvg: optimismLogoSvg,
  grayscaleLogoSvg: optimismGrayscaleLogoSvg,
  rpcUrl: "https://mainnet.optimism.io",
  explorerUrl: "https://optimistic.etherscan.io",
  constructExplorerLink: (txHash: string) =>
    `${optimism.explorerUrl}/tx/${txHash}`,
  nativeCurrencySymbol: "ETH",
  customRpcUrl: process.env.REACT_APP_CHAIN_10_PROVIDER_URL,
  pollingInterval: 2000,
};

export const optimism_viem = defineChain({
  id: optimism.chainId,
  name: optimism.name,
  nativeCurrency: {
    name: optimism.nativeCurrencySymbol,
    symbol: optimism.nativeCurrencySymbol,
    decimals: 18,
  },
  rpcUrls: {
    default: {
      http: [
        optimism.rpcUrl,
        optimism.customRpcUrl ? optimism.customRpcUrl : [],
      ].flat(),
    },
  },
  blockExplorers: {
    default: {
      name: optimism.name + " Explorer",
      url: optimism.explorerUrl,
    },
  },
});

export const optimismSepolia = {
  name: "Optimism Sepolia",
  fullName: "Optimism sepolia",
  chainId: 11155420,
  logoURI: optimismSepoliaLogo,
  grayscaleLogoURI: optimismSepoliaGrayscaleLogo,
  logoSvg: optimismSepoliaLogoSvg,
  grayscaleLogoSvg: optimismSepoliaGrayscaleLogoSvg,
  rpcUrl: "https://sepolia.optimism.io",
  explorerUrl: "https://sepolia-optimism.etherscan.io",
  constructExplorerLink: (txHash: string) =>
    `${optimismSepolia.explorerUrl}/tx/${txHash}`,
  nativeCurrencySymbol: "ETH",
  customRpcUrl: process.env.REACT_APP_CHAIN_11155420_PROVIDER_URL,
  pollingInterval: 15000,
};

export const optimismSepolia_viem = defineChain({
  id: optimismSepolia.chainId,
  name: optimismSepolia.name,
  nativeCurrency: {
    name: optimismSepolia.nativeCurrencySymbol,
    symbol: optimismSepolia.nativeCurrencySymbol,
    decimals: 18,
  },
  rpcUrls: {
    default: {
      http: [
        optimismSepolia.rpcUrl,
        optimismSepolia.customRpcUrl ? optimismSepolia.customRpcUrl : [],
      ].flat(),
    },
  },
  blockExplorers: {
    default: {
      name: optimismSepolia.name + " Explorer",
      url: optimismSepolia.explorerUrl,
    },
  },
});

export const polygon = {
  name: "Polygon",
  fullName: "Polygon Network",
  chainId: 137,
  logoURI: polygonLogo,
  grayscaleLogoURI: polygonGrayscaleLogo,
  logoSvg: polygonLogoSvg,
  grayscaleLogoSvg: polygonGrayscaleLogoSvg,
  rpcUrl: "https://rpc.ankr.com/polygon",
  explorerUrl: "https://polygonscan.com",
  constructExplorerLink: (txHash: string) =>
    `${polygon.explorerUrl}/tx/${txHash}`,
  nativeCurrencySymbol: "MATIC",
  customRpcUrl: process.env.REACT_APP_CHAIN_137_PROVIDER_URL,
  pollingInterval: 5000,
};

export const polygon_viem = defineChain({
  id: polygon.chainId,
  name: polygon.name,
  nativeCurrency: {
    name: polygon.nativeCurrencySymbol,
    symbol: polygon.nativeCurrencySymbol,
    decimals: 18,
  },
  rpcUrls: {
    default: {
      http: [
        polygon.rpcUrl,
        polygon.customRpcUrl ? polygon.customRpcUrl : [],
      ].flat(),
    },
  },
  blockExplorers: {
    default: {
      name: polygon.name + " Explorer",
      url: polygon.explorerUrl,
    },
  },
});

export const polygonAmoy = {
  name: "Polygon Amoy",
  fullName: "Polygon Amoy",
  chainId: 80002,
  logoURI: polygonAmoyLogo,
  grayscaleLogoURI: polygonAmoyGrayscaleLogo,
  logoSvg: polygonAmoyLogoSvg,
  grayscaleLogoSvg: polygonAmoyGrayscaleLogoSvg,
  rpcUrl: "https://rpc-amoy.polygon.technology",
  explorerUrl: "https://amoy.polygonscan.com",
  constructExplorerLink: (txHash: string) =>
    `${polygonAmoy.explorerUrl}/tx/${txHash}`,
  nativeCurrencySymbol: "MATIC",
  customRpcUrl: process.env.REACT_APP_CHAIN_80002_PROVIDER_URL,
  pollingInterval: 15000,
};

export const polygonAmoy_viem = defineChain({
  id: polygonAmoy.chainId,
  name: polygonAmoy.name,
  nativeCurrency: {
    name: polygonAmoy.nativeCurrencySymbol,
    symbol: polygonAmoy.nativeCurrencySymbol,
    decimals: 18,
  },
  rpcUrls: {
    default: {
      http: [
        polygonAmoy.rpcUrl,
        polygonAmoy.customRpcUrl ? polygonAmoy.customRpcUrl : [],
      ].flat(),
    },
  },
  blockExplorers: {
    default: {
      name: polygonAmoy.name + " Explorer",
      url: polygonAmoy.explorerUrl,
    },
  },
});

export const redstone = {
  name: "Redstone",
  fullName: "Redstone",
  chainId: 690,
  logoURI: redstoneLogo,
  grayscaleLogoURI: redstoneGrayscaleLogo,
  logoSvg: redstoneLogoSvg,
  grayscaleLogoSvg: redstoneGrayscaleLogoSvg,
  rpcUrl: "https://rpc.redstonechain.com",
  explorerUrl: "https://explorer.redstone.xyz",
  constructExplorerLink: (txHash: string) =>
    `${redstone.explorerUrl}/tx/${txHash}`,
  nativeCurrencySymbol: "ETH",
  customRpcUrl: process.env.REACT_APP_CHAIN_690_PROVIDER_URL,
  pollingInterval: 2000,
};

export const redstone_viem = defineChain({
  id: redstone.chainId,
  name: redstone.name,
  nativeCurrency: {
    name: redstone.nativeCurrencySymbol,
    symbol: redstone.nativeCurrencySymbol,
    decimals: 18,
  },
  rpcUrls: {
    default: {
      http: [
        redstone.rpcUrl,
        redstone.customRpcUrl ? redstone.customRpcUrl : [],
      ].flat(),
    },
  },
  blockExplorers: {
    default: {
      name: redstone.name + " Explorer",
      url: redstone.explorerUrl,
    },
  },
});

export const scroll = {
  name: "Scroll",
  fullName: "Scroll",
  chainId: 534352,
  logoURI: scrollLogo,
  grayscaleLogoURI: scrollGrayscaleLogo,
  logoSvg: scrollLogoSvg,
  grayscaleLogoSvg: scrollGrayscaleLogoSvg,
  rpcUrl: "https://rpc.scroll.io",
  explorerUrl: "https://scrollscan.com",
  constructExplorerLink: (txHash: string) =>
    `${scroll.explorerUrl}/tx/${txHash}`,
  nativeCurrencySymbol: "ETH",
  customRpcUrl: process.env.REACT_APP_CHAIN_534352_PROVIDER_URL,
  pollingInterval: 3000,
};

export const scroll_viem = defineChain({
  id: scroll.chainId,
  name: scroll.name,
  nativeCurrency: {
    name: scroll.nativeCurrencySymbol,
    symbol: scroll.nativeCurrencySymbol,
    decimals: 18,
  },
  rpcUrls: {
    default: {
      http: [
        scroll.rpcUrl,
        scroll.customRpcUrl ? scroll.customRpcUrl : [],
      ].flat(),
    },
  },
  blockExplorers: {
    default: {
      name: scroll.name + " Explorer",
      url: scroll.explorerUrl,
    },
  },
});

export const sepolia = {
  name: "Sepolia",
  fullName: "Sepolia",
  chainId: 11155111,
  logoURI: sepoliaLogo,
  grayscaleLogoURI: sepoliaGrayscaleLogo,
  logoSvg: sepoliaLogoSvg,
  grayscaleLogoSvg: sepoliaGrayscaleLogoSvg,
  rpcUrl: "https://gateway.tenderly.co/public/sepolia",
  explorerUrl: "https://sepolia.etherscan.io",
  constructExplorerLink: (txHash: string) =>
    `${sepolia.explorerUrl}/tx/${txHash}`,
  nativeCurrencySymbol: "ETH",
  customRpcUrl: process.env.REACT_APP_CHAIN_11155111_PROVIDER_URL,
  pollingInterval: 15000,
};

export const sepolia_viem = defineChain({
  id: sepolia.chainId,
  name: sepolia.name,
  nativeCurrency: {
    name: sepolia.nativeCurrencySymbol,
    symbol: sepolia.nativeCurrencySymbol,
    decimals: 18,
  },
  rpcUrls: {
    default: {
      http: [
        sepolia.rpcUrl,
        sepolia.customRpcUrl ? sepolia.customRpcUrl : [],
      ].flat(),
    },
  },
  blockExplorers: {
    default: {
      name: sepolia.name + " Explorer",
      url: sepolia.explorerUrl,
    },
  },
});

export const soneium = {
  name: "Soneium",
  fullName: "Soneium",
  chainId: 1868,
  logoURI: soneiumLogo,
  grayscaleLogoURI: soneiumGrayscaleLogo,
  logoSvg: soneiumLogoSvg,
  grayscaleLogoSvg: soneiumGrayscaleLogoSvg,
  rpcUrl: "https://rpc.soneium.org",
  explorerUrl: "https://soneium.blockscout.com",
  constructExplorerLink: (txHash: string) =>
    `${soneium.explorerUrl}/tx/${txHash}`,
  nativeCurrencySymbol: "ETH",
  customRpcUrl: process.env.REACT_APP_CHAIN_1868_PROVIDER_URL,
  pollingInterval: 2000,
};

export const soneium_viem = defineChain({
  id: soneium.chainId,
  name: soneium.name,
  nativeCurrency: {
    name: soneium.nativeCurrencySymbol,
    symbol: soneium.nativeCurrencySymbol,
    decimals: 18,
  },
  rpcUrls: {
    default: {
      http: [
        soneium.rpcUrl,
        soneium.customRpcUrl ? soneium.customRpcUrl : [],
      ].flat(),
    },
  },
  blockExplorers: {
    default: {
      name: soneium.name + " Explorer",
      url: soneium.explorerUrl,
    },
  },
});

export const worldChain = {
  name: "World Chain",
  fullName: "World Chain",
  chainId: 480,
  logoURI: worldChainLogo,
  grayscaleLogoURI: worldChainGrayscaleLogo,
  logoSvg: worldChainLogoSvg,
  grayscaleLogoSvg: worldChainGrayscaleLogoSvg,
  rpcUrl: "https://worldchain-mainnet.g.alchemy.com/public",
  explorerUrl: "https://worldchain-mainnet-explorer.alchemy.com",
  constructExplorerLink: (txHash: string) =>
    `${worldChain.explorerUrl}/tx/${txHash}`,
  nativeCurrencySymbol: "ETH",
  customRpcUrl: process.env.REACT_APP_CHAIN_480_PROVIDER_URL,
  pollingInterval: 2000,
};

export const worldChain_viem = defineChain({
  id: worldChain.chainId,
  name: worldChain.name,
  nativeCurrency: {
    name: worldChain.nativeCurrencySymbol,
    symbol: worldChain.nativeCurrencySymbol,
    decimals: 18,
  },
  rpcUrls: {
    default: {
      http: [
        worldChain.rpcUrl,
        worldChain.customRpcUrl ? worldChain.customRpcUrl : [],
      ].flat(),
    },
  },
  blockExplorers: {
    default: {
      name: worldChain.name + " Explorer",
      url: worldChain.explorerUrl,
    },
  },
});

export const zkSync = {
  name: "zkSync",
  fullName: "zkSync Era",
  chainId: 324,
  logoURI: zkSyncLogo,
  grayscaleLogoURI: zkSyncGrayscaleLogo,
  logoSvg: zkSyncLogoSvg,
  grayscaleLogoSvg: zkSyncGrayscaleLogoSvg,
  rpcUrl: "https://mainnet.era.zksync.io",
  explorerUrl: "https://era.zksync.network",
  constructExplorerLink: (txHash: string) =>
    `${zkSync.explorerUrl}/tx/${txHash}`,
  nativeCurrencySymbol: "ETH",
  customRpcUrl: process.env.REACT_APP_CHAIN_324_PROVIDER_URL,
  pollingInterval: 2000,
};

export const zkSync_viem = defineChain({
  id: zkSync.chainId,
  name: zkSync.name,
  nativeCurrency: {
    name: zkSync.nativeCurrencySymbol,
    symbol: zkSync.nativeCurrencySymbol,
    decimals: 18,
  },
  rpcUrls: {
    default: {
      http: [
        zkSync.rpcUrl,
        zkSync.customRpcUrl ? zkSync.customRpcUrl : [],
      ].flat(),
    },
  },
  blockExplorers: {
    default: {
      name: zkSync.name + " Explorer",
      url: zkSync.explorerUrl,
    },
  },
});

export const zora = {
  name: "Zora",
  fullName: "Zora",
  chainId: 7777777,
  logoURI: zoraLogo,
  grayscaleLogoURI: zoraGrayscaleLogo,
  logoSvg: zoraLogoSvg,
  grayscaleLogoSvg: zoraGrayscaleLogoSvg,
  rpcUrl: "https://rpc.zora.energy",
  explorerUrl: "https://zorascan.xyz",
  constructExplorerLink: (txHash: string) => `${zora.explorerUrl}/tx/${txHash}`,
  nativeCurrencySymbol: "ETH",
  customRpcUrl: process.env.REACT_APP_CHAIN_7777777_PROVIDER_URL,
  pollingInterval: 2000,
};

export const zora_viem = defineChain({
  id: zora.chainId,
  name: zora.name,
  nativeCurrency: {
    name: zora.nativeCurrencySymbol,
    symbol: zora.nativeCurrencySymbol,
    decimals: 18,
  },
  rpcUrls: {
    default: {
      http: [zora.rpcUrl, zora.customRpcUrl ? zora.customRpcUrl : []].flat(),
    },
  },
  blockExplorers: {
    default: {
      name: zora.name + " Explorer",
      url: zora.explorerUrl,
    },
  },
});

export const hyperliquid = {
  name: "Hyperliquid",
  fullName: "Hyperliquid",
  projectId: "hyperliquid",
  logoURI: hyperliquidLogo,
  grayscaleLogoURI: hyperliquidGrayscaleLogo,
  logoSvg: hyperliquidLogoSvg,
  grayscaleLogoSvg: hyperliquidGrayscaleLogoSvg,
  explorerUrl: "https://arbiscan.io",
  rpcUrl: "https://arbitrum.publicnode.com",
  intermediaryChain: 42161,
};

export const chainConfigs = [
  alephZero,
  arbitrum,
  arbitrumSepolia,
  base,
  baseSepolia,
  blast,
  blastSepolia,
  ink,
  lensSepolia,
  linea,
  lisk,
  liskSepolia,
  ethereum,
  mode,
  modeSepolia,
  optimism,
  optimismSepolia,
  polygon,
  polygonAmoy,
  redstone,
  scroll,
  sepolia,
  soneium,
  worldChain,
  zkSync,
  zora,
].reduce(
  (acc, chain) => {
    acc[chain.chainId] = chain;
    return acc;
  },
  {} as Record<number, typeof alephZero>
);

export const chains_viem = [
  alephZero_viem,
  arbitrum_viem,
  arbitrumSepolia_viem,
  base_viem,
  baseSepolia_viem,
  blast_viem,
  blastSepolia_viem,
  ink_viem,
  lensSepolia_viem,
  linea_viem,
  lisk_viem,
  liskSepolia_viem,
  ethereum_viem,
  mode_viem,
  modeSepolia_viem,
  optimism_viem,
  optimismSepolia_viem,
  polygon_viem,
  polygonAmoy_viem,
  redstone_viem,
  scroll_viem,
  sepolia_viem,
  soneium_viem,
  worldChain_viem,
  zkSync_viem,
  zora_viem,
] as const;

export const externConfigs = [hyperliquid].reduce(
  (acc, extern) => {
    acc[extern.projectId] = extern;
    return acc;
  },
  {} as Record<string, typeof hyperliquid>
);
