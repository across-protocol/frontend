/* Autogenerated file. Do not edit manually. */
/* tslint:disable */

import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BytesLike,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  SpokePoolV3Periphery,
  SpokePoolV3PeripheryInterface,
} from "../SpokePoolV3Periphery";

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes4[]",
        name: "_allowedSelectors",
        type: "bytes4[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ContractInitialized",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidFunctionSelector",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidMsgValue",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidSpokePool",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidSwapToken",
    type: "error",
  },
  {
    inputs: [],
    name: "LeftoverSrcTokens",
    type: "error",
  },
  {
    inputs: [],
    name: "MinimumExpectedInputAmount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "exchange",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "swapToken",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "acrossInputToken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "swapTokenAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "acrossInputAmount",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "acrossOutputToken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "acrossOutputAmount",
        type: "uint256",
      },
    ],
    name: "SwapBeforeBridge",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    name: "allowedSelectors",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "address",
        name: "inputToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "inputAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "outputAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "destinationChainId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "exclusiveRelayer",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "quoteTimestamp",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "fillDeadline",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "exclusivityParameter",
        type: "uint32",
      },
      {
        internalType: "bytes",
        name: "message",
        type: "bytes",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20Auth",
        name: "acrossInputToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "acrossInputAmount",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "address",
            name: "outputToken",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "outputAmount",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "depositor",
            type: "address",
          },
          {
            internalType: "address",
            name: "recipient",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "destinationChainid",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "exclusiveRelayer",
            type: "address",
          },
          {
            internalType: "uint32",
            name: "quoteTimestamp",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "fillDeadline",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "exclusivityParameter",
            type: "uint32",
          },
          {
            internalType: "bytes",
            name: "message",
            type: "bytes",
          },
        ],
        internalType: "struct SpokePoolV3Periphery.DepositData",
        name: "depositData",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "validAfter",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "validBefore",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "nonce",
        type: "bytes32",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "depositWithAuthorization",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20Permit",
        name: "acrossInputToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "acrossInputAmount",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "address",
            name: "outputToken",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "outputAmount",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "depositor",
            type: "address",
          },
          {
            internalType: "address",
            name: "recipient",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "destinationChainid",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "exclusiveRelayer",
            type: "address",
          },
          {
            internalType: "uint32",
            name: "quoteTimestamp",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "fillDeadline",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "exclusivityParameter",
            type: "uint32",
          },
          {
            internalType: "bytes",
            name: "message",
            type: "bytes",
          },
        ],
        internalType: "struct SpokePoolV3Periphery.DepositData",
        name: "depositData",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "depositWithPermit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "exchange",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract V3SpokePoolInterface",
        name: "_spokePool",
        type: "address",
      },
      {
        internalType: "contract WETH9Interface",
        name: "_wrappedNativeToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "_exchange",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes[]",
        name: "data",
        type: "bytes[]",
      },
    ],
    name: "multicall",
    outputs: [
      {
        internalType: "bytes[]",
        name: "results",
        type: "bytes[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "spokePool",
    outputs: [
      {
        internalType: "contract V3SpokePoolInterface",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "swapToken",
        type: "address",
      },
      {
        internalType: "contract IERC20",
        name: "acrossInputToken",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "routerCalldata",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "swapTokenAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "minExpectedInputTokenAmount",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "address",
            name: "outputToken",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "outputAmount",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "depositor",
            type: "address",
          },
          {
            internalType: "address",
            name: "recipient",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "destinationChainid",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "exclusiveRelayer",
            type: "address",
          },
          {
            internalType: "uint32",
            name: "quoteTimestamp",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "fillDeadline",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "exclusivityParameter",
            type: "uint32",
          },
          {
            internalType: "bytes",
            name: "message",
            type: "bytes",
          },
        ],
        internalType: "struct SpokePoolV3Periphery.DepositData",
        name: "depositData",
        type: "tuple",
      },
    ],
    name: "swapAndBridge",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20Auth",
        name: "swapToken",
        type: "address",
      },
      {
        internalType: "contract IERC20",
        name: "acrossInputToken",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "routerCalldata",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "swapTokenAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "minExpectedInputTokenAmount",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "address",
            name: "outputToken",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "outputAmount",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "depositor",
            type: "address",
          },
          {
            internalType: "address",
            name: "recipient",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "destinationChainid",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "exclusiveRelayer",
            type: "address",
          },
          {
            internalType: "uint32",
            name: "quoteTimestamp",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "fillDeadline",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "exclusivityParameter",
            type: "uint32",
          },
          {
            internalType: "bytes",
            name: "message",
            type: "bytes",
          },
        ],
        internalType: "struct SpokePoolV3Periphery.DepositData",
        name: "depositData",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "validAfter",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "validBefore",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "nonce",
        type: "bytes32",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "swapAndBridgeWithAuthorization",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20Permit",
        name: "swapToken",
        type: "address",
      },
      {
        internalType: "contract IERC20",
        name: "acrossInputToken",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "routerCalldata",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "swapTokenAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "minExpectedInputTokenAmount",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "address",
            name: "outputToken",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "outputAmount",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "depositor",
            type: "address",
          },
          {
            internalType: "address",
            name: "recipient",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "destinationChainid",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "exclusiveRelayer",
            type: "address",
          },
          {
            internalType: "uint32",
            name: "quoteTimestamp",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "fillDeadline",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "exclusivityParameter",
            type: "uint32",
          },
          {
            internalType: "bytes",
            name: "message",
            type: "bytes",
          },
        ],
        internalType: "struct SpokePoolV3Periphery.DepositData",
        name: "depositData",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "swapAndBridgeWithPermit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60406080604052346200011c5762001e1e803803806200001f8162000134565b928339810160209081838203126200011c5782516001600160401b03938482116200011c57019080601f830112156200011c57815193841162000120576005918460051b9084806200007381850162000134565b8098815201928201019283116200011c578401905b828210620000fa57505050600193849360ff19936001855f5416175f555f955b620000be575b604051611cc390816200015b8239f35b8151861015620000f45786809663ffffffff60e01b8382881b86010151165f52818352845f2082888254161790550195620000a8565b620000ae565b81516001600160e01b0319811681036200011c57815290840190840162000088565b5f80fd5b634e487b7160e01b5f52604160045260245ffd5b6040519190601f01601f191682016001600160401b03811183821017620001205760405256fe60806040526004361015610011575f80fd5b5f3560e01c8063038f12ea146100c4578063277deffe146100bf57806327e98fbd146100ba57806385f168eb146100b5578063ac9650d8146100b0578063afdac3d6146100ab578063bdf52ad3146100a6578063c0c53b8b146100a1578063c51e5eb91461009c578063d2f7265a146100975763fdf152d314610092575f80fd5b610b13565b610ac2565b6108a0565b61074d565b6106c0565b61066f565b6105dd565b610481565b61039b565b610224565b610175565b73ffffffffffffffffffffffffffffffffffffffff8116036100e757565b5f80fd5b600435906100f8826100c9565b565b602435906100f8826100c9565b9181601f840112156100e75782359167ffffffffffffffff83116100e757602083818601950101116100e757565b90816101409103126100e75790565b610124359060ff821682036100e757565b60e4359060ff821682036100e757565b6084359060ff821682036100e757565b346100e7576101807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126100e7576101ad6100eb565b6101b56100fa565b67ffffffffffffffff91906044358381116100e7576101d8903690600401610107565b9260a4359485116100e7576101f4610222953690600401610135565b936101fd610144565b9261016435956101443595610104359460e4359460c435946084359360643593610c95565b005b346100e7576101407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126100e757600435610260816100c9565b6102686100fa565b67ffffffffffffffff91906044358381116100e75761028b903690600401610107565b919060a4359485116100e7576102a8610222953690600401610135565b6102b0610155565b926101243595610104359560c435946084359360643593610dc0565b63ffffffff8116036100e757565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b67ffffffffffffffff811161031b57604052565b6102da565b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff82111761031b57604052565b67ffffffffffffffff811161031b57601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b6101407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126100e7576004356103d2816100c9565b6024356103de816100c9565b60a4356103ea816100c9565b60c4356103f6816102cc565b60e43590610403826102cc565b6101043592610411846102cc565b610124359567ffffffffffffffff87116100e757366023880112156100e75786600401359561043f87610361565b9661044d6040519889610320565b808852366024828b0101116100e7576020815f9260246102229c01838c013789010152608435916064359160443591610ea0565b346100e75760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126100e7576004357fffffffff0000000000000000000000000000000000000000000000000000000081168091036100e7575f526001602052602060ff60405f2054166040519015158152f35b5f5b8381106105095750505f910152565b81810151838201526020016104fa565b907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f602093610555815180928187528780880191016104f8565b0116010190565b6020808201906020835283518092526040830192602060408460051b8301019501935f915b8483106105915750505050505090565b90919293949584806105cd837fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc086600196030187528a51610519565b9801930193019194939290610581565b346100e75760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126100e75767ffffffffffffffff6004358181116100e757366023820112156100e75780600401359182116100e7573660248360051b830101116100e75761066191602461065592016111e4565b6040519182918261055c565b0390f35b5f9103126100e757565b346100e7575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126100e757602073ffffffffffffffffffffffffffffffffffffffff60025416604051908152f35b346100e7576101207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126100e7576004356106fc816100c9565b60443567ffffffffffffffff81116100e75761071c903690600401610135565b9060c4359160ff831683036100e75761022292610104359260e4359260a435916084359160643591602435906112cb565b346100e75760607ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126100e757600435610788816100c9565b60243590610795826100c9565b604435906107a2826100c9565b60045460ff8160a01c16610876577fffffffffffffffffffffff00000000000000000000000000000000000000000074010000000000000000000000000000000000000000926102229573ffffffffffffffffffffffffffffffffffffffff8092167fffffffffffffffffffffffff00000000000000000000000000000000000000006002541617600255169116171760045573ffffffffffffffffffffffffffffffffffffffff167fffffffffffffffffffffffff00000000000000000000000000000000000000006003541617600355565b60046040517f9f4eefba000000000000000000000000000000000000000000000000000000008152fd5b60c07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126100e757600480356108d7816100c9565b602435906108e4826100c9565b67ffffffffffffffff6044358181116100e7576109049036908601610107565b916064359060a4359081116100e7576109209036908801610135565b926109296113c2565b6109547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff005f54165f55565b3415610aac57813403610a835773ffffffffffffffffffffffffffffffffffffffff6109b0610997895473ffffffffffffffffffffffffffffffffffffffff1690565b73ffffffffffffffffffffffffffffffffffffffff1690565b9080821690871603610a5a57803b156100e7575f90604051988980927fd0e30db000000000000000000000000000000000000000000000000000000000825234905af1968715610a5557610a0e97610a3c575b505b60843592611421565b61022260017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff005f5416175f55565b80610a49610a4f92610307565b80610665565b5f610a03565b610db5565b876040517f3539a701000000000000000000000000000000000000000000000000000000008152fd5b866040517f1841b4e1000000000000000000000000000000000000000000000000000000008152fd5b610a0e9650610abd82303388611606565b610a05565b346100e7575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126100e757602073ffffffffffffffffffffffffffffffffffffffff60035416604051908152f35b346100e7575f60e07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126100e75760043590610b50826100c9565b60243560443567ffffffffffffffff81116100e757610b73903690600401610135565b9073ffffffffffffffffffffffffffffffffffffffff610b91610165565b94610b9a6113c2565b610bc57fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff005f54165f55565b1693843b156100e7576040517fd505accf00000000000000000000000000000000000000000000000000000000815233600482015230602482015260448101839052606480359082015260ff91909116608482015260a480359082015260c48035908201525f8160e48183895af1610c80575b50610c4f9293610c4a82303384611606565b611765565b610c7d60017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff005f5416175f55565b80f35b610c4f9350610c8e90610307565b5f92610c38565b73ffffffffffffffffffffffffffffffffffffffff909c9a919b94979295989396999c610cc06113c2565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff005f54165f5516998a3b156100e7576040517fef55bec6000000000000000000000000000000000000000000000000000000008152336004820152306024820152604481018990526064810193909352608483019390935260a482019b909b5260ff909a1660c48b015260e48a01919091526101048901525f8861012481838a5af1978815610a5557610d7898610da6575b50611421565b6100f860017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff005f5416175f55565b610daf90610307565b5f610d72565b6040513d5f823e3d90fd5b73ffffffffffffffffffffffffffffffffffffffff909a91999293949596979a610de86113c2565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff005f54165f551697883b156100e7576040517fd505accf00000000000000000000000000000000000000000000000000000000815233600482015230602482015260448101879052606481019b909b5260ff1660848b015260a48a019190915260c4890152610d78975f8160e481838b5af1610e91575b50610e8c83303389611606565b611421565b610e9a90610307565b5f610e7f565b939298919697909497610eb16113c2565b610edc7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff005f54165f55565b873403610fce57610f0561099760025473ffffffffffffffffffffffffffffffffffffffff1690565b96873b15610fa457873b156100e7575f99610f51956040519c8d9b8c9a8b9a7f7b939232000000000000000000000000000000000000000000000000000000008c523360048d01610ff8565b039134905af18015610a5557610f91575b506100f860017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff005f5416175f55565b80610a49610f9e92610307565b5f610f62565b60046040517fb474246c000000000000000000000000000000000000000000000000000000008152fd5b60046040517f1841b4e1000000000000000000000000000000000000000000000000000000008152fd5b9794909361107c9b9a969294999793996101809a73ffffffffffffffffffffffffffffffffffffffff8097818094168d521660208c01521660408a01525f60608a0152608089015260a088015260c08701521660e085015263ffffffff92838092166101008601521661012084015216610140820152816101608201520190610519565b90565b67ffffffffffffffff811161031b5760051b60200190565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b9035907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1813603018212156100e7570180359067ffffffffffffffff82116100e7576020019181360383136100e757565b908210156111305761112c9160051b8101906110c4565b9091565b611097565b908092918237015f815290565b3d1561116c573d9061115382610361565b916111616040519384610320565b82523d5f602084013e565b606090565b6020818303126100e75780519067ffffffffffffffff82116100e7570181601f820112156100e75780516111a481610361565b926111b26040519485610320565b818452602082840101116100e75761107c91602080850191016104f8565b80518210156111305760209160051b010190565b9190916111f08361107f565b9060406112006040519384610320565b8483527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe061122d8661107f565b015f5b8181106112ba57505082945f5b81811061124b575050505050565b5f80611258838588611115565b90611267875180938193611135565b0390305af4611274611142565b901561129a579060019161128882886111d0565b5261129381876111d0565b500161123d565b60448151106100e7578060046100e7920151602480918301019101611171565b806060602080938801015201611230565b73ffffffffffffffffffffffffffffffffffffffff9098959897949392979691966112f46113c2565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff005f54165f551694853b156100e7576040517fef55bec6000000000000000000000000000000000000000000000000000000008152336004820152306024820152604481018890526064810193909352608483019390935260a482019790975260ff90961660c487015260e48601919091526101048501525f846101248183855af1938415610a5557610d78946113ac575b50611765565b6113b590610307565b5f6113a6565b156100e757565b60ff5f5416156100e757565b7fffffffff00000000000000000000000000000000000000000000000000000000903581811693926004811061140357505050565b60040360031b82901b16169150565b908160209103126100e7575190565b95949392919061147561147161146a61143a848b6113ce565b7fffffffff00000000000000000000000000000000000000000000000000000000165f52600160205260405f2090565b5460ff1690565b1590565b6115dc576040517f70a082310000000000000000000000000000000000000000000000000000000080825230600483015260209873ffffffffffffffffffffffffffffffffffffffff94919391929091908a816024818c8a165afa948515610a55578b915f966115bd575b5060405190815230600482015295869060249082908d165afa948515610a55576100f89a5f96611584575b50505f61157f92819261153d8661153760035473ffffffffffffffffffffffffffffffffffffffff1690565b8d6118cf565b8261155d60035473ffffffffffffffffffffffffffffffffffffffff1690565b9261156d60405180948193611135565b03925af1611579611142565b506113bb565b6119d9565b5f929650926115ad83928561157f96903d106115b6575b6115a58183610320565b810190611412565b9692509261150b565b503d61159b565b6115d5919650823d84116115b6576115a58183610320565b945f6114e0565b60046040517f42868c9b000000000000000000000000000000000000000000000000000000008152fd5b9290604051927f23b872dd00000000000000000000000000000000000000000000000000000000602085015273ffffffffffffffffffffffffffffffffffffffff809216602485015216604483015260648201526064815260a081019181831067ffffffffffffffff84111761031b576100f892604052611bb0565b3561107c816100c9565b3561107c816102cc565b601f82602094937fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe093818652868601375f8582860101520116010190565b9895909461107c9d9b97926020956117579a959c976101809d8d73ffffffffffffffffffffffffffffffffffffffff998a8096818096168452169101521660408d01521660608b015260808a015260a089015260c08801521660e086015263ffffffff8092166101008601521661012084015261014083019063ffffffff169052565b816101608201520191611696565b9190916117948361178e61099760025473ffffffffffffffffffffffffffffffffffffffff1690565b836118cf565b6117b661099760025473ffffffffffffffffffffffffffffffffffffffff1690565b916117c360408201611682565b6117cf60608301611682565b916117d981611682565b936117e660a08301611682565b6117f260c0840161168c565b6117fe60e0850161168c565b9061180c610100860161168c565b9261181b6101208701876110c4565b9690958b3b156100e7576040519c8d9b8c809c7f7b939232000000000000000000000000000000000000000000000000000000008252608086013595602001359473ffffffffffffffffffffffffffffffffffffffff16916004019c6118809d6116d4565b03815a5f948591f18015610a55576118955750565b80610a496100f892610307565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b60449192602073ffffffffffffffffffffffffffffffffffffffff604051948580927fdd62ed3e000000000000000000000000000000000000000000000000000000008252306004830152808916602483015286165afa928315610a55575f936119ab575b5082018092116119a6576040517f095ea7b300000000000000000000000000000000000000000000000000000000602082015273ffffffffffffffffffffffffffffffffffffffff9390931660248401526044808401929092529082526100f891906119a1606483610320565b611bb0565b6118a2565b6119c591935060203d6020116115b6576115a58183610320565b915f611934565b919082039182116119a657565b6040517f70a082310000000000000000000000000000000000000000000000000000000080825230600483015273ffffffffffffffffffffffffffffffffffffffff989697959695602095878b16959294939087826024818a5afa8015610a5557611a4b925f91611b93575b506119cc565b978810611b69576040519384523060048501528916928581602481875afa8015610a55578392611a81925f92611b4a57506119cc565b03611b20576100f8977f646284e396b68ff4b4f34e0aa97bcdb9c100f5b44a20da5c475f62703985384191611b18611ace60035473ffffffffffffffffffffffffffffffffffffffff1690565b89611ad88c611682565b9360405195869516998d013592859094939260609273ffffffffffffffffffffffffffffffffffffffff6080840197168352602083015260408201520152565b0390a4611765565b60046040517fd6cf42f0000000000000000000000000000000000000000000000000000000008152fd5b611b62919250883d8a116115b6576115a58183610320565b905f611a45565b60046040517f0492ff87000000000000000000000000000000000000000000000000000000008152fd5b611baa9150893d8b116115b6576115a58183610320565b5f611a45565b73ffffffffffffffffffffffffffffffffffffffff166040516040810181811067ffffffffffffffff82111761031b57611c2b937f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c656460205f948594604052818152015260208151910182855af1611c25611142565b91611c64565b8051908115918215611c41575b5050156100e757565b81925090602091810103126100e7576020015180151581036100e7575f80611c38565b9015611c7e57815115611c75575090565b3b156100e75790565b5080519081156100e757602001fdfea2646970667358221220273204c702747fdff0ffe95c6319ba2f475d4a21c4beb991049bd8c21271b20064736f6c63430008170033";

type SpokePoolV3PeripheryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SpokePoolV3PeripheryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SpokePoolV3Periphery__factory extends ContractFactory {
  constructor(...args: SpokePoolV3PeripheryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _allowedSelectors: BytesLike[],
    overrides?: Overrides & { from?: string }
  ): Promise<SpokePoolV3Periphery> {
    return super.deploy(
      _allowedSelectors,
      overrides || {}
    ) as Promise<SpokePoolV3Periphery>;
  }
  override getDeployTransaction(
    _allowedSelectors: BytesLike[],
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(_allowedSelectors, overrides || {});
  }
  override attach(address: string): SpokePoolV3Periphery {
    return super.attach(address) as SpokePoolV3Periphery;
  }
  override connect(signer: Signer): SpokePoolV3Periphery__factory {
    return super.connect(signer) as SpokePoolV3Periphery__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SpokePoolV3PeripheryInterface {
    return new utils.Interface(_abi) as SpokePoolV3PeripheryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SpokePoolV3Periphery {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as SpokePoolV3Periphery;
  }
}
