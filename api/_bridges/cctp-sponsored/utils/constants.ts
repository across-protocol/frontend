import { CHAIN_IDs } from "../../../_constants";
import { CCTP_SUPPORTED_CHAINS } from "../../cctp/utils/constants";

// TODO: Use actual addresses for zero addresses
export const SPONSORED_CCTP_SRC_PERIPHERY_ADDRESSES = {
  [CHAIN_IDs.ARBITRUM]: "0x0000000000000000000000000000000000000000",
  [CHAIN_IDs.ARBITRUM_SEPOLIA]: "0x79176E2E91c77b57AC11c6fe2d2Ab2203D87AF85",
};

// TODO: Use actual addresses for zero addresses
export const SPONSORED_CCTP_DST_PERIPHERY_ADDRESSES = {
  [CHAIN_IDs.HYPEREVM]: "0x0000000000000000000000000000000000000000",
  [CHAIN_IDs.HYPEREVM_TESTNET]: "0x0000000000000000000000000000000000000000",
};

export const SPONSORED_CCTP_ORIGIN_CHAINS = CCTP_SUPPORTED_CHAINS.filter(
  (chainId) =>
    ![CHAIN_IDs.HYPERCORE, CHAIN_IDs.HYPERCORE_TESTNET].includes(chainId)
);

export const SPONSORED_CCTP_INPUT_TOKENS = ["USDC"];

export const SPONSORED_CCTP_OUTPUT_TOKENS = ["USDC-SPOT", "USDH-SPOT"];

export const SPONSORED_CCTP_DESTINATION_CHAINS = [
  CHAIN_IDs.HYPERCORE,
  CHAIN_IDs.HYPERCORE_TESTNET,
];
