import { writeFileSync, copyFileSync } from "fs";
import * as prettier from "prettier";
import { camelCase, capitalize } from "lodash-es";

import * as chainConfigs from "./chain-configs";

const chainsConstantsFileTargetDir = process.cwd() + "/src/constants/chains";
const chainsConstantsFilePath = chainsConstantsFileTargetDir + "/configs.ts";
const chainAssetsTargetDir = process.cwd() + "/src/assets/chain-logos";

async function generateUiAssets() {
  const chainsFileImports: string[] = [
    "// This file is auto-generated by scripts/generate-ui-assets.ts",
  ];
  const chainsFileContent: string[] = [];
  const chainVarNames: string[] = [];

  for (const [chainKey, chainConfig] of Object.entries(chainConfigs)) {
    const { chainId, logoPath, grayscaleLogoPath, name, fullName } =
      chainConfig;

    // Copy logos into assets directory
    const assetFileNameBase = chainKey.toLowerCase().replace("_", "-");
    const chainLogoTargetFileName = assetFileNameBase + ".svg";
    const chainGrayscaleLogoTargetFileName =
      assetFileNameBase + "-grayscale.svg";
    const chainConfigSrcDir =
      process.cwd() + "/scripts/chain-configs/" + assetFileNameBase + "/";
    copyFileSync(
      chainConfigSrcDir + logoPath,
      chainAssetsTargetDir + "/" + chainLogoTargetFileName
    );
    copyFileSync(
      chainConfigSrcDir + grayscaleLogoPath,
      chainAssetsTargetDir + "/" + chainGrayscaleLogoTargetFileName
    );

    // Generate chain constants file
    const chainVarName = camelCase(name);
    const chainLogoVarName = camelCase(name + "Logo");
    const chainGrayscaleLogoVarName = camelCase(name + "GrayscaleLogo");
    const chainLogoSvgVarName = chainLogoVarName + "Svg";
    const chainGrayscaleLogoSvgVarName = chainGrayscaleLogoVarName + "Svg";
    chainsFileImports.push(`
      import ${chainLogoVarName} from "assets/chain-logos/${chainLogoTargetFileName}";
      import ${chainGrayscaleLogoVarName} from "assets/chain-logos/${chainGrayscaleLogoTargetFileName}";
      import {ReactComponent as ${chainLogoSvgVarName}} from "assets/chain-logos/${chainLogoTargetFileName}";
      import {ReactComponent as ${chainGrayscaleLogoSvgVarName}} from "assets/chain-logos/${chainGrayscaleLogoTargetFileName}";
    `);
    chainsFileContent.push(`
      export const ${chainVarName} = {
        name: "${name}",
        fullName: "${fullName || capitalize(name)}",
        chainId: ${chainId},
        logoURI: ${chainLogoVarName},
        grayscaleLogoURI: ${chainGrayscaleLogoVarName},
        logoSvg: ${chainLogoSvgVarName},
        grayscaleLogoSvg: ${chainGrayscaleLogoSvgVarName},
        rpcUrl: "${chainConfig.publicRpcUrl}",
        explorerUrl: "${chainConfig.blockExplorer}",
        constructExplorerLink: (txHash: string) => \`\${${chainVarName}.explorerUrl}/tx/\${txHash}\`,
        nativeCurrencySymbol: "${chainConfig.nativeToken}",
        customRpcUrl: process.env.REACT_APP_CHAIN_${chainId}_PROVIDER_URL,
        pollingInterval: ${chainConfig.blockTimeSeconds || 15 * 1000},
      };
    `);
    chainVarNames.push(chainVarName);
  }
  chainsFileContent.push(`
    export const chainConfigs = [${chainVarNames.join(", ")}].reduce((acc, chain) => {
      acc[chain.chainId] = chain;
      return acc;
    }, {} as Record<number, typeof ${chainVarNames[0]}>);
  `);

  // Write chains file
  const chainsFileContentStr =
    chainsFileImports.join("\n") + chainsFileContent.join("\n");
  writeFileSync(
    chainsConstantsFilePath,
    await prettier.format(chainsFileContentStr, { parser: "typescript" })
  );
}

generateUiAssets();
